rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Çalışanlar koleksiyonu
    match /employees/{employeeId} {
      allow read: if request.auth != null && (
        resource.data.id == request.auth.uid ||
        hasRole('manager') ||
        hasRole('owner')
      );
      allow write: if hasRole('manager') || hasRole('owner');
    }

    // Punch kayıtları
    match /punches/{punchId} {
      allow read: if request.auth != null && (
        resource.data.employee_id == getEmployeeId(request.auth.uid) ||
        hasRole('manager') ||
        hasRole('owner')
      );
      allow create: if request.auth != null && (
        request.resource.data.source == 'KIOSK' ||
        hasRole('manager') ||
        hasRole('owner')
      );
      allow update, delete: if hasRole('manager') || hasRole('owner');
    }

    // Oturumlar
    match /sessions/{sessionId} {
      allow read: if request.auth != null && (
        resource.data.employee_id == getEmployeeId(request.auth.uid) ||
        hasRole('manager') ||
        hasRole('owner')
      );
      allow write: if hasRole('manager') || hasRole('owner');
    }

    // Cihazlar
    match /devices/{deviceId} {
      allow read: if hasRole('manager') || hasRole('owner');
      allow write: if hasRole('owner');
    }

    // Lokasyonlar
    match /locations/{locationId} {
      allow read: if request.auth != null;
      allow write: if hasRole('manager') || hasRole('owner');
    }

    // Challenge'lar (sadece oluşturma ve okuma)
    match /challenges/{challengeId} {
      allow read, write: if request.auth != null;
    }

    // Onaylar
    match /approvals/{approvalId} {
      allow read: if request.auth != null && (
        resource.data.employee_id == getEmployeeId(request.auth.uid) ||
        hasRole('manager') ||
        hasRole('owner')
      );
      allow create: if request.auth != null;
      allow update: if hasRole('manager') || hasRole('owner');
    }

    // Raporlar
    match /reports/{reportId} {
      allow read, write: if hasRole('manager') || hasRole('owner');
    }

    // Yardımcı fonksiyonlar
    function hasRole(role) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             role in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles;
    }

    function getEmployeeId(authUid) {
      return get(/databases/$(database)/documents/users/$(authUid)).data.employee_id;
    }
  }
}
